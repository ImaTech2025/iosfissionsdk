#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
#ifndef FSUNIONADSDK_SWIFT_H
#define FSUNIONADSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreMedia;
@import Dispatch;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="FSUnionAdSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class NSString;
@class NSBundle;
@class NSCoder;
SWIFT_CLASS("_TtC12FSUnionAdSDK27FSAdDebugMainViewController")
@interface FSAdDebugMainViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSIndexPath;
@class UITableViewCell;
@interface FSAdDebugMainViewController (SWIFT_EXTENSION(FSUnionAdSDK)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end

SWIFT_CLASS("_TtC12FSUnionAdSDK25FSAdDifferenceAttribution")
@interface FSAdDifferenceAttribution : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 广告跳转类型
typedef SWIFT_ENUM(NSInteger, FSAdInteractionType, open) {
  FSAdInteractionTypeUnspecified = 0,
/// 未定义
  FSAdInteractionTypeRedirect = 1,
/// 落地页
  FSAdInteractionTypeDownload = 2,
/// 下载
  FSAdInteractionTypeDeeplink = 3,
/// 拉起deeplink
  FSAdInteractionTypeWxMiniApp = 4,
/// 小程序
  FSAdInteractionTypeMarket = 5,
/// 应用市场
  FSAdInteractionTypeQuickApp = 6,
/// iOS 未用到
  FSAdInteractionTypeJustShow = 7,
};

SWIFT_CLASS("_TtC12FSUnionAdSDK20FSAdSDKConfiguration")
@interface FSAdSDKConfiguration : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) FSAdSDKConfiguration * _Nonnull configuration;)
+ (FSAdSDKConfiguration * _Nonnull)configuration SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL debug;
/// 应用 ID，唯一标识（必填）
@property (nonatomic, copy) NSString * _Nullable appID;
/// 应用 token，唯一标志（必填）
@property (nonatomic, copy) NSString * _Nullable appToken;
/// 应用名称
@property (nonatomic, copy) NSString * _Nullable appName;
/// 设备 ID
@property (nonatomic, copy) NSString * _Nullable customDeviceID;
/// 自定义参数
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable extraUserData;
/// 个性化推荐开关  默认 false
@property (nonatomic) BOOL personalRecommend;
/// 青少年模式 默认 false
@property (nonatomic) BOOL teenagerModel;
/// 渠道名  默认“AppStore”
@property (nonatomic, copy) NSString * _Nonnull channel;
/// 版本号
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
/// build number
@property (nonatomic) uint32_t buildNumber;
/// 是否支持微信小程序跳转，默认为 false
@property (nonatomic) BOOL supportWXApi;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC12FSUnionAdSDK14FSAdSDKManager")
@interface FSAdSDKManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sdkVersion;)
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
+ (void)logEnable:(BOOL)logEnable;
+ (void)startWithCompletionHandler:(void (^ _Nullable)(BOOL, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum FSAdType : NSUInteger;
SWIFT_CLASS("_TtC12FSUnionAdSDK8FSAdSlot")
@interface FSAdSlot : NSObject
/// 广告位 id
@property (nonatomic, copy) NSString * _Nonnull slotID;
/// 广告位类型
@property (nonatomic) enum FSAdType type;
/// 广告请求超时时间
@property (nonatomic) NSTimeInterval timeout;
/// 请求
@property (nonatomic, copy) NSString * _Nonnull requestID;
/// 广告请求数量
@property (nonatomic) NSUInteger count;
- (nonnull instancetype)initWithSlotID:(NSString * _Nonnull)slotID type:(enum FSAdType)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSUInteger, FSAdType, open) {
  FSAdTypeNone = 0,
  FSAdTypeSplash = 1,
  FSAdTypeInterstitial = 2,
  FSAdTypeReward = 3,
  FSAdTypeNative = 4,
  FSAdTypeNativeExpress = 5,
};

SWIFT_CLASS("_TtC12FSUnionAdSDK5FSApp")
@interface FSApp : NSObject
/// APP ID
@property (nonatomic, copy) NSString * _Nullable ID;
/// APP名称
@property (nonatomic, copy) NSString * _Nullable name;
/// APP包名
@property (nonatomic, copy) NSString * _Nullable pkgName;
/// APP图标URL
@property (nonatomic, copy) NSString * _Nullable icon;
/// 按钮文案
@property (nonatomic, copy) NSString * _Nullable buttonText;
/// APP包体大小，单位：Byte
@property (nonatomic) uint32_t size;
@property (nonatomic) BOOL hasApp;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC12FSUnionAdSDK9FSUnionAd")
@interface FSUnionAd : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable dspName;
@property (nonatomic, readonly, copy) NSString * _Nullable dspID;
@property (nonatomic, readonly, copy) NSString * _Nullable sid;
@property (nonatomic, readonly, copy) NSString * _Nullable maxCPM;
@property (nonatomic, readonly, copy) NSString * _Nullable minCPM;
@property (nonatomic, readonly, copy) NSString * _Nullable realCPM;
@property (nonatomic, readonly) NSInteger dealType;
@property (nonatomic, readonly) BOOL disableCpmFilter;
@property (nonatomic, readonly) enum FSAdInteractionType interactionType;
- (void)win;
- (void)loseWithWinPrice:(NSString * _Nonnull)winPrice;
- (void)loseWithWinPrice:(NSString * _Nonnull)winPrice extraWinInfo:(NSDictionary<NSString *, id> * _Nonnull)extraWinInfo;
- (void)loadAdData;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol FSInterstitialAdDelegate;
SWIFT_CLASS("_TtC12FSUnionAdSDK16FSInterstitialAd")
@interface FSInterstitialAd : FSUnionAd
@property (nonatomic, weak) id <FSInterstitialAdDelegate> _Nullable delegate;
@property (nonatomic) BOOL videoMuted;
@property (nonatomic, readonly, strong) FSAdSlot * _Nonnull slot;
@property (nonatomic) NSTimeInterval timeout;
- (NSString * _Nonnull)price SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithSlot:(FSAdSlot * _Nonnull)slot OBJC_DESIGNATED_INITIALIZER;
- (void)loadAdData;
- (void)showAdFromRootViewController:(UIViewController * _Nonnull)rootViewController;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_PROTOCOL("_TtP12FSUnionAdSDK24FSInterstitialAdDelegate_")
@protocol FSInterstitialAdDelegate <NSObject>
@optional
/// 广告请求成功回调
- (void)fs_interstitialAdSuccessToLoadAd:(FSInterstitialAd * _Nonnull)ad;
/// 广告请求失败回调
- (void)fs_interstitialAdFailedToLoadAd:(FSInterstitialAd * _Nonnull)ad error:(NSError * _Nonnull)error;
/// 物料加载成功回调
- (void)fs_interstitialAdSuccessToDwonlaodMaterial:(FSInterstitialAd * _Nonnull)ad;
/// 物料加载失败回调
- (void)fs_interstitialAdFailedToDwonlaodMaterial:(FSInterstitialAd * _Nonnull)ad error:(NSError * _Nonnull)error;
/// 渲染成功回调
- (void)fs_interstitialAdRenderSuccess:(FSInterstitialAd * _Nonnull)ad;
/// 渲染失败回调
- (void)fs_interstitialAdRenderFail:(FSInterstitialAd * _Nonnull)ad error:(NSError * _Nonnull)error;
/// 广告即将展示回调
- (void)fs_interstitialAdWillPresent:(FSInterstitialAd * _Nonnull)ad;
/// 广告已经展示回调
- (void)fs_interstitialAdDidVisible:(FSInterstitialAd * _Nonnull)ad;
/// 点击回调
- (void)fs_interstitialAdDidClick:(FSInterstitialAd * _Nonnull)ad;
/// 广告关闭回调
- (void)fs_interstitialAdDidClose:(FSInterstitialAd * _Nonnull)ad;
/// 此回调在广告跳转到其他控制器时，该控制器被关闭时调用interactionType：此参数可区分是打开的appstore/落地页等
- (void)fs_interstitialAdDidCloseOtherController:(FSInterstitialAd * _Nonnull)ad interactionType:(enum FSAdInteractionType)interactionType;
@end

@class WfAdImage;
@class UIImage;
/// 广告依赖物料
SWIFT_CLASS("_TtC12FSUnionAdSDK14FSMaterialMeta")
@interface FSMaterialMeta : NSObject
/// 标题
@property (nonatomic, copy) NSString * _Nullable title;
/// 副标题
@property (nonatomic, copy) NSString * _Nullable desc;
@property (nonatomic, copy) NSString * _Nullable dspName;
/// 图片列表
@property (nonatomic, copy) NSArray<WfAdImage *> * _Nullable images;
@property (nonatomic) BOOL isVideo;
/// 视频尺寸宽度
@property (nonatomic) CGFloat videoWidth;
/// 视频尺寸高度
@property (nonatomic) CGFloat videoHeight;
@property (nonatomic) enum FSAdInteractionType type;
@property (nonatomic, strong) UIImage * _Nullable adLogo;
/// 应用信息
@property (nonatomic, strong) FSApp * _Nullable app;
@property (nonatomic) CGFloat appRating;
@property (nonatomic) BOOL isShakeEnabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class FSNativeAdRelatedView;
@protocol FSNativeAdDelegate;
@class FSTwinAd;
@class UIView;
/// 支持自定义样式的广告
SWIFT_CLASS("_TtC12FSUnionAdSDK10FSNativeAd")
@interface FSNativeAd : FSUnionAd
@property (nonatomic, readonly, weak) FSNativeAdRelatedView * _Nullable nativeAdRelatedView;
/// realCpm
@property (nonatomic) uint32_t realCpm;
/// 获取智能竞价价差
@property (nonatomic) uint32_t maxCpm;
/// minCpm
@property (nonatomic) uint32_t minCpm;
/// 智能竞价标记
@property (nonatomic, copy) NSString * _Nullable smartRankPkg;
/// 智能竞价最大价差
@property (nonatomic) uint32_t maxCpmDiff;
/// 素材
@property (nonatomic, readonly, strong) FSMaterialMeta * _Nonnull material;
@property (nonatomic, readonly) double createTime;
/// Required.
/// Root view controller for handling ad actions.
/// Action method includes is ‘presentViewController’.
@property (nonatomic, weak) UIViewController * _Nullable rootViewController;
@property (nonatomic, weak) id <FSNativeAdDelegate> _Nullable delegate;
@property (nonatomic) CGRect landPadding;
@property (nonatomic, strong) FSTwinAd * _Nullable twinAd;
/// 注册可点击views
/// \param containerView adView 对应的容器
///
/// \param clickableViews 1.传入clickableViews不为空时，只有clickableViews 和视频区域可以响应点击进行转化 ;
/// 2.传入clickableViews为空时，默认整个广告可响应点击进行转化
///
- (void)registerContainer:(UIView * _Nonnull)containerView withClickableViews:(NSArray<UIView *> * _Nonnull)clickableViews;
/// Actively request nativeAd datas.
- (void)loadAdData;
- (NSString * _Nonnull)price SWIFT_WARN_UNUSED_RESULT;
- (void)handleClickWithView:(UIView * _Nonnull)view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_PROTOCOL("_TtP12FSUnionAdSDK18FSNativeAdDelegate_")
@protocol FSNativeAdDelegate
@optional
/// This method is called when native ad slot will be shown.
- (void)fs_nativeAdWillVisibleWithNativeAd:(FSNativeAd * _Nonnull)nativeAd;
/// This method is called when native ad slot has been shown.
- (void)fs_nativeAdDidBecomeVisibleWithNativeAd:(FSNativeAd * _Nonnull)nativeAd;
/// This method is called when another controller has been closed.
- (void)fs_nativeAdDidCloseOtherControllerWithNativeAd:(FSNativeAd * _Nonnull)nativeAd interactionType:(enum FSAdInteractionType)interactionType;
/// This method is called when native ad is clicked.
- (void)fs_nativeAdDidClickWithNativeAd:(FSNativeAd * _Nonnull)nativeAd containerView:(UIView * _Nullable)containerView;
@end

@class UIImageView;
@class UILabel;
@class FSVideoAdView;
@class WfNativeAdActionView;
SWIFT_CLASS("_TtC12FSUnionAdSDK21FSNativeAdRelatedView")
@interface FSNativeAdRelatedView : NSObject
@property (nonatomic, strong) UIImageView * _Nonnull logoImageView;
@property (nonatomic, strong) UILabel * _Nonnull adLabel;
@property (nonatomic, strong) FSVideoAdView * _Nonnull videoAdView;
/// 摇一摇、扭一扭、点击等动作捕捉视图
@property (nonatomic, strong) WfNativeAdActionView * _Nullable actionView;
- (void)refreshData:(FSNativeAd * _Nonnull)nativeAd;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol FSNativeAdsManagerDelegate;
SWIFT_CLASS("_TtC12FSUnionAdSDK18FSNativeAdsManager")
@interface FSNativeAdsManager : NSObject
@property (nonatomic, weak) id <FSNativeAdsManagerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithSlot:(FSAdSlot * _Nonnull)slot OBJC_DESIGNATED_INITIALIZER;
/// 请求广告
- (void)loadAd;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_PROTOCOL("_TtP12FSUnionAdSDK26FSNativeAdsManagerDelegate_")
@protocol FSNativeAdsManagerDelegate <NSObject>
@optional
/// 加载成功回调
- (void)fs_nativeAdsManagerSuccessToLoad:(FSNativeAdsManager * _Nonnull)adsManager nativeAds:(NSArray<FSNativeAd *> * _Nonnull)nativeAds;
/// 加载失败回调
- (void)fs_nativeAdsManagerDidFail:(FSNativeAdsManager * _Nonnull)adsManager error:(NSError * _Nullable)error;
@end

@protocol FSNativeExpressFeedsAdDelegate;
enum FSNativeExpressType : NSInteger;
SWIFT_CLASS("_TtC12FSUnionAdSDK22FSNativeExpressFeedsAd")
@interface FSNativeExpressFeedsAd : NSObject
@property (nonatomic, weak) id <FSNativeExpressFeedsAdDelegate> _Nullable delegate;
@property (nonatomic) BOOL videoMuted;
- (NSString * _Nonnull)price SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL preloaded;
@property (nonatomic, readonly) BOOL isLoading;
@property (nonatomic, weak) UIViewController * _Nullable rootViewController;
@property (nonatomic) enum FSNativeExpressType expressType;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
- (nonnull instancetype)initWithSlot:(FSAdSlot * _Nonnull)slot OBJC_DESIGNATED_INITIALIZER;
- (void)loadAdData;
- (void)showInView:(UIView * _Nullable)view;
- (void)render;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@interface FSNativeExpressFeedsAd (SWIFT_EXTENSION(FSUnionAdSDK)) <FSNativeAdsManagerDelegate>
- (void)fs_nativeAdsManagerSuccessToLoad:(FSNativeAdsManager * _Nonnull)adsManager nativeAds:(NSArray<FSNativeAd *> * _Nonnull)nativeAds;
- (void)fs_nativeAdsManagerDidFail:(FSNativeAdsManager * _Nonnull)adsManager error:(NSError * _Nullable)error;
@end

@interface FSNativeExpressFeedsAd (SWIFT_EXTENSION(FSUnionAdSDK)) <FSNativeAdDelegate>
- (void)fs_nativeAdDidBecomeVisibleWithNativeAd:(FSNativeAd * _Nonnull)nativeAd;
- (void)fs_nativeAdDidCloseOtherControllerWithNativeAd:(FSNativeAd * _Nonnull)nativeAd interactionType:(enum FSAdInteractionType)interactionType;
- (void)fs_nativeAdDidClickWithNativeAd:(FSNativeAd * _Nonnull)nativeAd containerView:(UIView * _Nullable)containerView;
@end

@class NSError;
enum FSPlayerPlayState : NSInteger;
SWIFT_PROTOCOL("_TtP12FSUnionAdSDK21FSVideoAdViewDelegate_")
@protocol FSVideoAdViewDelegate
@optional
- (void)fs_videoAdViewReadyToPlay:(FSVideoAdView * _Nonnull)videoAdView;
- (void)fs_videoAdViewDidPlayFinish:(FSVideoAdView * _Nonnull)videoAdView;
- (void)fs_videoAdView:(FSVideoAdView * _Nonnull)videoAdView didLoadFailedWithError:(NSError * _Nullable)error;
- (void)fs_videoAdView:(FSVideoAdView * _Nonnull)videoAdView playStateDidChanged:(enum FSPlayerPlayState)playState;
@end

@interface FSNativeExpressFeedsAd (SWIFT_EXTENSION(FSUnionAdSDK)) <FSVideoAdViewDelegate>
- (void)fs_videoAdViewReadyToPlay:(FSVideoAdView * _Nonnull)videoAdView;
- (void)fs_videoAdViewDidPlayFinish:(FSVideoAdView * _Nonnull)videoAdView;
- (void)fs_videoAdView:(FSVideoAdView * _Nonnull)videoAdView playStateDidChanged:(enum FSPlayerPlayState)playState;
- (void)fs_videoAdView:(FSVideoAdView * _Nonnull)videoAdView didLoadFailedWithError:(NSError * _Nullable)error;
@end

SWIFT_PROTOCOL("_TtP12FSUnionAdSDK30FSNativeExpressFeedsAdDelegate_")
@protocol FSNativeExpressFeedsAdDelegate
@optional
- (void)fs_expressFeedAdLoadSuccess:(FSNativeExpressFeedsAd * _Nonnull)ad;
- (void)fs_expressFeedAdLoadFailed:(FSNativeExpressFeedsAd * _Nonnull)ad withError:(NSError * _Nonnull)error;
- (void)fs_expressFeedAdShowSuccess:(FSNativeExpressFeedsAd * _Nonnull)ad;
- (void)fs_expressFeedAdShowFailed:(FSNativeExpressFeedsAd * _Nonnull)ad withError:(NSError * _Nonnull)error;
- (void)fs_expressFeedAdDidClosed:(FSNativeExpressFeedsAd * _Nonnull)ad;
- (void)fs_expressFeedAdDidClicked:(FSNativeExpressFeedsAd * _Nonnull)ad;
- (void)fs_expressFeedAdDidCloseOtherController:(FSNativeExpressFeedsAd * _Nonnull)ad interactionType:(enum FSAdInteractionType)interactionType;
@end

typedef SWIFT_ENUM(NSInteger, FSNativeExpressType, open) {
  FSNativeExpressTypeNone = 0,
  FSNativeExpressTypeBanner = 1,
  FSNativeExpressTypeFeed = 2,
  FSNativeExpressTypeResult = 3,
  FSNativeExpressTypeBrand = 4,
};

typedef SWIFT_ENUM(NSInteger, FSPlayerPlayState, open) {
  FSPlayerPlayStateNone = 0,
  FSPlayerPlayStateBuffering = 1,
  FSPlayerPlayStatePlaying = 2,
  FSPlayerPlayStateStopped = 3,
  FSPlayerPlayStatePause = 4,
  FSPlayerPlayStateFailed = 5,
};

@protocol FSRewardedAdDelegate;
SWIFT_CLASS("_TtC12FSUnionAdSDK12FSRewardedAd")
@interface FSRewardedAd : FSUnionAd
@property (nonatomic, weak) id <FSRewardedAdDelegate> _Nullable delegate;
- (nonnull instancetype)initWithSlot:(FSAdSlot * _Nonnull)slot OBJC_DESIGNATED_INITIALIZER;
- (void)loadAdData;
- (void)showAdFromRootViewController:(UIViewController * _Nullable)rootViewController;
- (NSString * _Nonnull)price SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_PROTOCOL("_TtP12FSUnionAdSDK20FSRewardedAdDelegate_")
@protocol FSRewardedAdDelegate <NSObject>
@optional
/// 广告请求成功回调
- (void)fs_rewardedAdDidLoadSuccess:(FSRewardedAd * _Nonnull)ad;
/// 广告请求失败回调
- (void)fs_rewardedAd:(FSRewardedAd * _Nonnull)ad didLoadFailedWithError:(NSError * _Nonnull)error;
/// 物料加载成功回调
- (void)fs_rewardedAdDidDownloadMaterial:(FSRewardedAd * _Nonnull)ad;
/// 广告渲染失败 （可能是视频/图片加载失败）
- (void)fs_rewardedAd:(FSRewardedAd * _Nonnull)ad didRenderFailedWithError:(NSError * _Nonnull)error;
/// 广告即将展示回调
- (void)fs_rewardedAdWillPresent:(FSRewardedAd * _Nonnull)ad;
/// 广告曝光回调
- (void)fs_rewardedAdDidVisible:(FSRewardedAd * _Nonnull)ad;
/// 视频广告播放完成
- (void)fs_rewardedAdVideoDidPlayFinish:(FSRewardedAd * _Nonnull)ad;
/// 广告奖励发放成功
- (void)fs_rewardedAdDidSucceed:(FSRewardedAd * _Nonnull)ad;
/// 广告关闭回调
- (void)fs_rewardedAdDidClose:(FSRewardedAd * _Nonnull)ad;
/// 广告点击
- (void)fs_rewardedAdDidClick:(FSRewardedAd * _Nonnull)ad;
/// 广告跳过
- (void)fs_rewardedAdDidSkip:(FSRewardedAd * _Nonnull)ad;
@end

@protocol FSSplashAdDelegate;
SWIFT_CLASS("_TtC12FSUnionAdSDK10FSSplashAd")
@interface FSSplashAd : FSUnionAd
@property (nonatomic, weak) id <FSSplashAdDelegate> _Nullable delegate;
/// 底部logo ,高度最高为屏幕高度的20%，最低为屏幕高度的15%
@property (nonatomic, strong) UIView * _Nullable bottomView;
- (nonnull instancetype)initWithSlot:(FSAdSlot * _Nonnull)slot OBJC_DESIGNATED_INITIALIZER;
- (void)loadAdData;
- (void)showSplashIn:(UIViewController * _Nonnull)rootViewController bottomView:(UIView * _Nullable)bottomView;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@interface FSSplashAd (SWIFT_EXTENSION(FSUnionAdSDK))
- (NSString * _Nonnull)price SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, FSSplashAdCloseType, open) {
  FSSplashAdCloseTypeUnknown = 0,
  FSSplashAdCloseTypeClickSkip = 1,
  FSSplashAdCloseTypeCountdownToZero = 2,
  FSSplashAdCloseTypeClickJump = 3,
};

SWIFT_PROTOCOL("_TtP12FSUnionAdSDK18FSSplashAdDelegate_")
@protocol FSSplashAdDelegate
@optional
/// 开屏广告请求成功
- (void)fs_splashAdLoadSuccess:(FSSplashAd * _Nonnull)ad;
/// 开屏广告请求失败
- (void)fs_splashAdLoadFailed:(FSSplashAd * _Nonnull)ad error:(NSError * _Nonnull)error;
/// 开屏广告素材缓存成功
- (void)fs_splashAdMaterialDownloadSuccess:(FSSplashAd * _Nonnull)ad;
/// 开屏广告素材缓存失败
- (void)fs_splashAdMaterialDownloadFailed:(FSSplashAd * _Nonnull)ad error:(NSError * _Nonnull)error;
/// 开屏广告将要展示
- (void)fs_splashAdWillPresent:(FSSplashAd * _Nonnull)ad;
/// 开屏广告曝光
- (void)fs_splashAdDidVisible:(FSSplashAd * _Nonnull)ad;
/// 开屏广告展示失败
- (void)fs_splashAdFailedToPresent:(FSSplashAd * _Nonnull)ad error:(NSError * _Nonnull)error;
/// 开屏广告点击
- (void)fs_splashAdDidClick:(FSSplashAd * _Nonnull)ad;
/// 开屏广告关闭
- (void)fs_splashAdDidClose:(FSSplashAd * _Nonnull)ad closeType:(enum FSSplashAdCloseType)closeType;
@end

@class FSTwinAdView;
SWIFT_CLASS("_TtC12FSUnionAdSDK8FSTwinAd")
@interface FSTwinAd : FSNativeAd
@property (nonatomic, strong) FSTwinAdView * _Nullable adView;
@end

@interface FSTwinAd (SWIFT_EXTENSION(FSUnionAdSDK))
- (void)render;
@end

@class UIEvent;
SWIFT_CLASS("_TtC12FSUnionAdSDK12FSTwinAdView")
@interface FSTwinAdView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIButton;
/// 自渲染feed流视频播放组件
SWIFT_CLASS("_TtC12FSUnionAdSDK13FSVideoAdView")
@interface FSVideoAdView : UIView
@property (nonatomic) BOOL autoPlay;
@property (nonatomic) BOOL isVisibleAutoPlay;
@property (nonatomic) BOOL isPlayFinished;
@property (nonatomic, readonly) CGSize natureSize;
@property (nonatomic) BOOL isMuted;
@property (nonatomic) BOOL isAutoReplay;
@property (nonatomic, strong) UIView * _Nonnull backgroundView;
@property (nonatomic, readonly, strong) UIButton * _Nonnull muteButton;
@property (nonatomic, weak) id <FSVideoAdViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame nativeAd:(FSNativeAd * _Nonnull)nativeAd OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)replay;
- (void)destroy;
- (void)pause;
- (void)play;
@end

/// 图片信息类
SWIFT_CLASS("_TtC12FSUnionAdSDK9WfAdImage")
@interface WfAdImage : NSObject
/// image url
@property (nonatomic, copy) NSString * _Nonnull url;
/// image width
@property (nonatomic) double width;
/// image height
@property (nonatomic) double height;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 摇一摇、扭一扭、点击等动作捕捉视图
SWIFT_CLASS("_TtC12FSUnionAdSDK20WfNativeAdActionView")
@interface WfNativeAdActionView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

SWIFT_CLASS("_TtC12FSUnionAdSDK27WfVideoFullscreenPlayerView")
@interface WfVideoFullscreenPlayerView : UIView
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC12FSUnionAdSDK29WfVideoFullscreenTransitioner")
@interface WfVideoFullscreenTransitioner : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol UIViewControllerAnimatedTransitioning;
@interface WfVideoFullscreenTransitioner (SWIFT_EXTENSION(FSUnionAdSDK)) <UIViewControllerTransitioningDelegate>
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
@end

@protocol UIViewControllerContextTransitioning;
@protocol UIViewImplicitlyAnimating;
@interface WfVideoFullscreenTransitioner (SWIFT_EXTENSION(FSUnionAdSDK)) <UIViewControllerAnimatedTransitioning>
- (NSTimeInterval)transitionDuration:(id <UIViewControllerContextTransitioning> _Nullable)transitionContext SWIFT_WARN_UNUSED_RESULT;
- (void)animateTransition:(id <UIViewControllerContextTransitioning> _Nonnull)transitionContext;
- (id <UIViewImplicitlyAnimating> _Nonnull)interruptibleAnimatorForTransition:(id <UIViewControllerContextTransitioning> _Nonnull)transitionContext SWIFT_WARN_UNUSED_RESULT;
@end

SWIFT_CLASS("_TtC12FSUnionAdSDK18WfVideoLoadManager")
@interface WfVideoLoadManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AVAssetResourceLoader;
@class AVAssetResourceLoadingRequest;
@interface WfVideoLoadManager (SWIFT_EXTENSION(FSUnionAdSDK)) <AVAssetResourceLoaderDelegate>
- (BOOL)resourceLoader:(AVAssetResourceLoader * _Nonnull)resourceLoader shouldWaitForLoadingOfRequestedResource:(AVAssetResourceLoadingRequest * _Nonnull)loadingRequest SWIFT_WARN_UNUSED_RESULT;
- (void)resourceLoader:(AVAssetResourceLoader * _Nonnull)resourceLoader didCancelLoadingRequest:(AVAssetResourceLoadingRequest * _Nonnull)loadingRequest;
@end

SWIFT_CLASS("_TtC12FSUnionAdSDK17WfVideoPlayerView")
@interface WfVideoPlayerView : UIView
@property (nonatomic) UIViewContentMode contentMode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NSURL;
@interface WfVideoPlayerView (SWIFT_EXTENSION(FSUnionAdSDK))
- (void)prepareToPlay;
- (void)play;
/// Play a video of the specified url.
/// \param url Can be a local or remote URL
///
- (void)playFor:(NSURL * _Nonnull)url;
/// Replay video.
/// \param resetCount Reset replayCount
///
- (void)replayWithResetCount:(BOOL)resetCount;
/// Continue playing video.
- (void)resume;
/// Pause video.
- (void)pause;
/// Moves the playback cursor and invokes the specified block when the seek operation has either been completed or been interrupted.
- (void)seekTo:(CMTime)time completion:(void (^ _Nullable)(BOOL))completion;
/// Moves the playback cursor within a specified time bound and invokes the specified block when the seek operation has either been completed or been interrupted.
- (void)seekTo:(CMTime)time toleranceBefore:(CMTime)toleranceBefore toleranceAfter:(CMTime)toleranceAfter completion:(void (^ _Nonnull)(BOOL))completion;
/// Requests invocation of a block during playback to report changing time.
- (id _Nullable)addPeriodicTimeObserverForInterval:(CMTime)interval queue:(dispatch_queue_t _Nullable)queue using:(void (^ _Nonnull)(CMTime))using_;
/// Cancels a previously registered periodic or boundary time observer.
- (void)removeTimeObserver:(id _Nonnull)observer;
- (void)destroy;
@end

SWIFT_CLASS("_TtC12FSUnionAdSDK21WfVideoPreloadManager")
@interface WfVideoPreloadManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_PROTOCOL("_TtP12FSUnionAdSDK29WfVideoPreloadManagerDelegate_")
@protocol WfVideoPreloadManagerDelegate <NSObject>
- (void)videoPreloadManagerDidFinish:(WfVideoPreloadManager * _Nonnull)preloadManager;
@end

SWIFT_CLASS("_TtC12FSUnionAdSDK26WfVideoPreloadMultiManager")
@interface WfVideoPreloadMultiManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@interface WfVideoPreloadMultiManager (SWIFT_EXTENSION(FSUnionAdSDK)) <WfVideoPreloadManagerDelegate>
- (void)videoPreloadManagerDidFinish:(WfVideoPreloadManager * _Nonnull)preloadManager;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
